<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.easyrhyme.dao.RhymeWordDao">

    <sql id="insertColumns">
        lexeme, freq, score, pos, language, first, second, third, fourth, fifth, sixth, seventh
    </sql>
    
    <sql id="selectColumns">
        id, lexeme, freq, score, pos, language, first, second, third, fourth, fifth, sixth, seventh, create_time, update_time
    </sql>

    <insert id="upsert" >
        INSERT INTO rhyme_word (<include refid="insertColumns"/>)
            VALUES (#{bean.lexeme}, #{bean.freq}, #{bean.score}, #{bean.pos}, #{bean.language}, #{bean.first}, 
                    #{bean.second}, #{bean.third}, #{bean.fourth}, #{bean.fifth}, #{bean.sixth}, #{bean.seventh})
            ON DUPLICATE KEY UPDATE freq = freq + 1;
    </insert>
    
    <select id="querySingle" resultType="RhymeWord">
        select <include refid="selectColumns"/>
        from rhyme_word where first in
            <foreach collection="firsts" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        and lexeme != #{orig}
        order by freq desc, id limit #{limit} offset #{offset};
    </select>

    <select id="queryDouble" resultType="RhymeWord">
        select <include refid="selectColumns"/>
        from rhyme_word where first in
            <foreach collection="firsts" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            and second in
            <foreach collection="seconds" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            and lexeme != #{orig}     
        order by freq desc, id limit #{limit} offset #{offset};
    </select>
    
    <select id="queryMulti" resultType="RhymeWord">
        select <include refid="selectColumns"/>
        from rhyme_word where first in
            <foreach collection="firsts" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            and second in
            <foreach collection="seconds" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            and third in
            <foreach collection="thirds" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>            
            and lexeme != #{orig}
        order by freq desc, id limit #{limit} offset #{offset};
    </select>

</mapper>

