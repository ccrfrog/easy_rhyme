<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">

    <sql id="paramField">
        id,
        domain,
        order_num as orderNum,
        supplier_id as supplierId,
        order_detail as orderDetail,
        version,
        order_status as orderStatus,
        create_time as createTime,
        update_time as updateTime,
        cache_flag as cacheFlag
    </sql>

    <sql id="whereField">
        <if test="domain!=null">
            and domain = #{domain}
        </if>
        <if test="startTime!=null">
            and update_time &gt;= #{startTime}
        </if>
        <if test="endTime!=null">
            and update_time &lt;= #{endTime}
        </if>
    </sql>

    <sql id="supplierWhereField">
        <if test="supplierId!=null">
            and supplier_id = #{supplierId}
        </if>
        <if test="startTime!=null">
            and update_time &gt;= #{startTime}
        </if>
        <if test="endTime!=null">
            and update_time &lt;= #{endTime}
        </if>
    </sql>

    <insert id="insert" parameterType="NormOrderInfoRecord">
        insert ignore into norm_order_info (order_num, supplier_id, domain, order_detail, create_time, order_status, version, cache_flag)
        values (#{orderNum}, #{supplierId}, #{domain}, #{orderDetail}, #{createTime}, #{orderStatus}, #{version}, #{cacheFlag})
    </insert>

    <update id="update" parameterType="NormOrderInfoRecord">
        update norm_order_info set order_detail = #{orderDetail}, version = #{version}, order_status = #{orderStatus} 
        where order_num = #{orderNum} and version &lt; #{version}
    </update>
    
	<select id="queryByOrderNum" resultType="NormOrderInfoRecord">
        select
        <include refid="paramField"/>
        from norm_order_info
        where order_num = #{orderNum}
    </select>

	<select id="querySupplierOrderBySupplierId" parameterType="map" resultType="NormOrderInfoRecord">
        select
        <include refid="paramField"/>
        from norm_order_info
        <where>
            <include refid="supplierWhereField"/>
        </where>
    </select>
    
    
    <select id="selectExpiredOrderIds" resultType="long">
        select id from norm_order_info where update_time &lt;= #{endTime}
        <if test="supplierIds!=null">
            and supplier_id in
            <foreach collection="supplierIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="orderStatus!=null">
            and order_status in
            <foreach collection="orderStatus" item="state" open="(" close=")" separator=",">
                #{state}
            </foreach>
        </if>
        <choose>
            <when test="limit != null and limit &gt; 0 and limit &lt;= 500">limit #{limit}</when>
            <otherwise>limit 100</otherwise>
        </choose>
    </select>
    
    <delete id="deleteByIds">
        delete from norm_order_info where id in
        <foreach collection="ids" item="id" index="index" open="(" close=")"
                 separator=",">
            #{id}
        </foreach>
    </delete>
    
    <select id="selectTotalBetween" resultType="int">
        select count(id) from norm_order_info 
        where update_time &gt;= #{startTime} and update_time &lt;= #{endTime}
    </select>
    
    <select id="selectOrderNumsUpdateTimeBetween" resultType="NormOrderInfoRecord">
        select id, order_num as orderNum, update_time as updateTime from norm_order_info 
        where update_time &gt;= #{startTime} and update_time &lt;= #{endTime}
        order by update_time desc 
        <choose>
            <when test="limit != null and limit &gt; 0 and limit &lt;= 500">limit #{limit}</when>
            <otherwise>limit 100</otherwise>
        </choose>
        offset #{offset}
    </select>
    
    <update id="updateDetailByOrderNum" parameterType="NormOrderInfoRecord">
        update norm_order_info set order_detail = #{orderDetail}, update_time = #{updateTime}
        where order_num = #{orderNum} and update_time &lt;= #{updateTime}
    </update>
    

</mapper>



